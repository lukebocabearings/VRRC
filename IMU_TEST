#include <Adafruit_9DOF.h>
#include <Adafruit_L3GD20_U.h>
#include <Adafruit_LSM303_U.h>
#include <Adafruit_Sensor.h>
#include <Wire.h>
#include <Servo.h>

/* Assign a unique ID to the sensors */
Adafruit_9DOF                dof   = Adafruit_9DOF();
Adafruit_LSM303_Accel_Unified accel = Adafruit_LSM303_Accel_Unified(30301);
Adafruit_LSM303_Mag_Unified   mag   = Adafruit_LSM303_Mag_Unified(30302);

Servo rollServo;
Servo pitchServo;
Servo yawServo;

void initSensors()
{
  if(!accel.begin())
  {
    /* There was a problem detecting the LSM303 ... check your connections */
   //Serial.println(F("Ooops, no LSM303 detected ... Check your wiring!"));
  }
  else 
  Serial.println("Somethings wrong");
  
  if(!mag.begin())
  {
    /* There was a problem detecting the LSM303 ... check your connections */
   Serial.println("Ooops, no LSM303 detected ... Check your wiring!");
  }
  else
  Serial.println("Somethings off");
}

void setup() {
  Serial.begin(115200);
  Serial.println(F("Adafruit 9 DOF Pitch/Roll/Heading Example"));
  
  /* Initialise the sensors */
  accel.begin();
  mag.begin();
  rollServo.attach(3);
  pitchServo.attach(5);
  yawServo.attach(6);
}

void loop() {
  sensors_event_t accel_event;
  sensors_event_t mag_event;
  sensors_vec_t   orientation;
  

  /* Calculate pitch and roll from the raw accelerometer data */
  accel.getEvent(&accel_event);
  if (dof.accelGetOrientation(&accel_event, &orientation))
  {
    /* 'orientation' should have valid .roll and .pitch fields */
    Serial.print(F("Roll: "));
    Serial.print(orientation.roll);
    Serial.print(F("; "));
    Serial.print(F("Pitch: "));
    Serial.print(orientation.pitch);
    Serial.print(F("; "));
  }
  else {
   //Serial.println("Where's the accelerometer??");
  }
  
  /* Calculate the heading using the magnetometer */
  mag.getEvent(&mag_event);
  if (dof.magGetOrientation(SENSOR_AXIS_Z, &mag_event, &orientation))
  {
    /* 'orientation' should have valid .heading data now */
    Serial.print(F("Heading: "));
    Serial.print(orientation.heading);
    Serial.print(F("; "));
  }
  else {
   Serial.println("Where's the magnetometer??");
  }
  if(dof.magTiltCompensation(SENSOR_AXIS_Z, &mag_event, &accel_event))
  {
    int roll = map(orientation.roll, -90, 90, 180, 0);
    int pitch = map(orientation.pitch, -110, 110, 0, 180);
    int yaw = map(orientation.heading, 0, 360, 180, 0);
    rollServo.write(roll);
    pitchServo.write(pitch);
    yawServo.write(yaw);
  }
  else
  {
    Serial.print("I dont know which way is up!);
  }
  delay(50);
}
